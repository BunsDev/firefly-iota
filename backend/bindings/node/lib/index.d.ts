import { AccountToCreate, AccountIdentifier, ListMessagesFilter, SyncAccountOptions } from '../../../../api-wrapper/account';
import { Transfer } from '../../../../api-wrapper/message';
export declare function init(storagePath?: string): void;
export declare function onMessage(cb: (payload: any) => void): void;
export declare function createAccount(__id: number): ((account: AccountToCreate) => Promise<number>);
export declare function removeAccount(__id: number): ((accountId: AccountIdentifier) => Promise<number>);
export declare function getAccount(__id: number): ((accountId: AccountIdentifier) => Promise<number>);
export declare function getAccounts(__id: number): (() => Promise<number>);
export declare function syncAccounts(__id: number): (() => Promise<number>);
export declare function generateAddress(__id: number): ((accountId: AccountIdentifier) => Promise<number>);
export declare function listMessages(__id: number): ((accountId: AccountIdentifier, filters?: ListMessagesFilter) => Promise<number>);
export declare function listAddresses(__id: number): ((accountId: AccountIdentifier, unspent?: boolean) => Promise<number>);
export declare function availableBalance(__id: number): ((accountId: AccountIdentifier) => Promise<number>);
export declare function totalBalance(__id: number): ((accountId: AccountIdentifier) => Promise<number>);
export declare function latestAddress(__id: number): ((accountId: AccountIdentifier) => Promise<number>);
export declare function syncAccount(__id: number): ((accountId: AccountIdentifier, options?: SyncAccountOptions) => Promise<number>);
export declare function reattach(__id: number): ((accountId: AccountIdentifier, messageId: string) => Promise<number>);
export declare function backup(__id: number): ((destinationPath: string) => Promise<number>);
export declare function restoreBackup(__id: number): ((backupPath: string) => Promise<number>);
export declare function setStrongholdPassword(__id: number): ((password: string) => Promise<number>);
export declare function send(__id: number): ((fromAccountId: AccountIdentifier, transfer: Transfer) => Promise<number>);
export declare function internalTransfer(__id: number): ((fromAccountId: AccountIdentifier, toAccountId: AccountIdentifier, amount: number) => Promise<number>);
export declare function listenToErrorEvents(): void;
export declare function listenToBalanceChangeEvents(): void;
export declare function listenToNewTransactionEvents(): void;
export declare function listenToConfirmationStateChangeEvents(): void;
export declare function listenToReattachmentEvents(): void;
export declare function listenToBroadcastEvents(): void;
